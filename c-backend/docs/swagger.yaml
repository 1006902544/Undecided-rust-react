definitions:
  captcha.SendCaptchaReq:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  captcha.VerifyCaptchaReq:
    properties:
      captcha:
        type: string
      email:
        type: string
    required:
    - captcha
    - email
    type: object
  response.RestfulResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  user.SignInReq:
    properties:
      captcha:
        type: string
      email:
        type: string
      password:
        type: string
      type:
        enum:
        - email
        - password
        type: string
      username:
        type: string
    required:
    - type
    type: object
  user.UserCreateOrUpdateInfoReq:
    properties:
      avatarUrl:
        type: string
      birthday:
        type: string
      email:
        type: string
      gender:
        type: integer
      id:
        type: integer
      mobile:
        type: integer
      nickname:
        type: string
      region:
        type: string
      username:
        type: string
    type: object
  user.UserInfo:
    properties:
      avatarUrl:
        type: string
      birthday:
        type: string
      createTime:
        type: string
      email:
        type: string
      gender:
        type: integer
      id:
        type: integer
      mobile:
        type: integer
      nickname:
        type: string
      region:
        type: string
      updateTime:
        type: string
      username:
        type: string
    required:
    - email
    - id
    - nickname
    - region
    - username
    type: object
  user.UserSignUpAccountReq:
    properties:
      captcha:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  user.UserSignUpReq:
    properties:
      account:
        $ref: '#/definitions/user.UserSignUpAccountReq'
      info:
        $ref: '#/definitions/user.UserCreateOrUpdateInfoReq'
      type:
        type: string
    required:
    - type
    type: object
info:
  contact: {}
paths:
  /api/user/captcha/send:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/captcha.SendCaptchaReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.RestfulResponse'
      summary: SendCaptchaToEmail
      tags:
      - User
  /api/user/captcha/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/captcha.VerifyCaptchaReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.RestfulResponse'
      summary: EmailVerify
      tags:
      - User
  /api/user/self:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.RestfulResponse'
            - properties:
                data:
                  $ref: '#/definitions/user.UserInfo'
              type: object
      summary: GetSelfInfo
      tags:
      - User
  /api/user/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.RestfulResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: SignIn
      tags:
      - User
  /api/user/signUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserSignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.RestfulResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: SignUp
      tags:
      - User
swagger: "2.0"
